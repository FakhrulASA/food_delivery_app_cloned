type Product {
  id: ID!
  name: String!
  product_img_url: String
  price: Int!
  description: String
  option: [ProductOption]
  likes: Int
}
type ProductOption {
  name: String!
  choice: [OptionChoice]!
}
type OptionChoice {
  name: String!
  additional_price: Int
}
type ProductSection {
  id: ID!
  name: String!
  products: [Product]!
}
type Category {
  id: ID!
  name: String!
  img_url: String!
}
type Merchant {
  id: ID!
  name: String!
  img_url: String!
  categories: [String]!
  product_sections: [ProductSection]!
  rating: Float!
  ratingCount: Int!
  location: [String!]!
  opening: String!
  closing: String!
  isOpen: Boolean!
}
type User {
  id: ID!
  name: String
  email: String!
  phone_number: String
  location: Location
  createdAt: String!
}
type Location {
  address: String
  city: String
  coordinates: [Float]!
}
type Order {
  id: ID!
  customer_id: ID!
  payment: Payment!
  order_detail: OrderDetail!
  status: String!
  createdAt: String!
}
type OrderDetail {
  delivery_fee: Int!
  total_price: Int!
  merchant: OrderDetailMerchant!
  product: [OrderProduct]!
}
type OrderDetailMerchant {
  id: ID!
  name: String!
}
type OrderProduct {
  id: ID!
  name: String!,
  product_img_url: String,
  price: Int!,
  quantity: Int!,
  instructions: String,
  option: [OrderProductOption],
}
type OrderProductOption {
  name: String!,
  additional_price: Int,
  option_type: String!
}
type Choice {
  name: String!,
  additional_price: Int
}
type Payment {
  reference: String,
  method: String!
  createdAt: String!
}
input OrderInput {
  payment: PaymentInput!
  order_detail: OrderDetailInput!
}
input PaymentInput {
  reference: String,
  method: String!
}
input OrderDetailInput {
  delivery_fee: Int!
  total_price: Int!
  merchant: OrderDetailMerchantInput!
  product: [OrderProductInput]!
}
input OrderDetailMerchantInput {
  id: ID!
  name: String!
}
input OrderProductInput {
  name: String!,
  product_img_url: String,
  price: Int!,
  quantity: Int!,
  instructions: String,
  option: [OrderProductOptionInput],
}
input OrderProductOptionInput {
  name: String!,
  additional_price: Int,
  option_type: String!
}
input MobileNumberInput {
  number: String
}
input OtpVerificationInput {
  otp: String
}
input LocationInput {
  address: String
  city: String
  coordinates: [Float]!
}
type Query {
  getUser: User!
  getCategories: [Category]!
  getMerchants: [Merchant]!
  getMerchantsByCategory(category: String!): [Merchant]!
  getMerchant(merchantId: String): Merchant!
  getOrders: [Order]!
}
type Mutation {
  register: User
  updateLocation(location: LocationInput!): User!

  mobileNUmber(number: String!): String!
  otpVerification(otp: String!): User!

  createOrder(orderInput: OrderInput!): Order!

  likeProduct(productName: String!): String!
  rateMerchant(merchantId: ID!, rate: Int!): Merchant!
}
type Subscription {
  newOrder: Order!
}